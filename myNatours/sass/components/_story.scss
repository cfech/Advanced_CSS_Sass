.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba($color-black, 0.5);
  background-color: rgba($color-white, 0.4);
  border-radius: 3px;
  padding: 6rem;
  //to account for the 3 rem offset of the circle
  padding-left: 9rem;
  font-size: $default-font-size;

  //here we skew the parent and "unskew" the children(1)
  transform: skewX(-12deg);

  @include respond(tab-port) {
    width: 100%;
    padding: 4rem;
    padding-left: 7rem;
  }

  @include respond(phone) {
    transform: skewX(0deg);
  }

  &__shape {
    width: 15rem;
    height: 15rem;
    //allows the rest of the content to float around the shape
    float: left;
    //radius , center (x,y), this circle will take up the entire width/height cause the radius is 50% of the width, 7.5rem , *2 = 15 rem, placed at the center of the element
    //for this to work you must have a defined height and width as well as the element must be floated
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    //, (2)
    transform: translateX(-3rem) skewX(12deg);

    //for caption
    position: relative;

    overflow: hidden;

    //testing for clip path
    @supports (clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)) or
    (-webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)) {
      
      -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);

  }

    @include respond(phone) {
      transform: translateX(-3rem) skewX(0deg);
    }
  }

  &__image {
    //if an image is wider than its height use height 100%, else width 100%
    height: 100%;
    transform: translateX(-4rem) scale(1.2);
    transition: all 0.5s;
    // backface-visibility: hidden;
  }

  &__text {
    //(2)
    transform: skewX(12deg);

    @include respond(phone) {
        transform:  skewX(0deg);
      }
  }

  &__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    //initial state before the hover
    transform: translate(-50%, 20%);
    opacity: 0;

    ///////
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;

    transition: all 0.5s;

    //to get ride of slight movement at the end
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }
  &:hover &__caption {
    opacity: 1;
    transform: translate(-50%, -50%);
  }

  &:hover &__image {
    transform: translateX(-4rem) scale(1);

    //filter will add different filters the the image
    filter: blur(3px) brightness(80%);
  }
}
