.header {
  height: 85vh;
  //in sass you can stick a hexadecimal color right into the rgba function
  background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.803), rgba(40, 180, 133, 0.81)),
    //url is relative to where the final compiled css is looking
      url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  //using supports to test for clip path
  @supports (clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)) or
    (-webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)) {
      height: 95vh;
  }

  //an write media queries to target resolution, 192 dots per inch is a hgh res mac book screen and common break point, can combine media queries with and, can also chain them with , just like css
  //webkit version is for safari pixels 2x
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
         only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
         only screen and (min-width: 125em) {
    background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.803), rgba(40, 180, 133, 0.81)),
      url(../img/hero.jpg);
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }

  &__banner {
    background-color: rgba(white, 0.8);
    width: 100%;
    height: 3rem;
    position: absolute;
    top: 10rem;
    left: 0;
    text-align: center;
    font-size: 1.5rem;
    line-height: 1;
    padding: 2rem;
    padding-bottom: 30px;
    z-index: 50;

    @media only screen and (max-width: 370px) {
      font-size: 1.2rem;
      // padding-bottom: 45px;
    }

    &--link {
      &:link,
      &:visited {
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 2px;
        font-size: 1.4rem;
        transition: all 0.2s;
      }

      &:hover {
        background-color: black;
        color: $color-primary;
        //x, y, blur, color
        box-shadow: 0 1rem 2rem rgba($color-primary, 0.7);
        transform: translateY(-2px);
      }

      &:active {
        box-shadow: 0 0.5rem 1rem rgba($color-primary, 0.7);
        transform: translateY(0px);
      }
    }
  }
}
