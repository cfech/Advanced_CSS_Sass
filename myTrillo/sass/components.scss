////////////////////////////////////
//LOGO
.logo {
  height: 3.5rem;
  margin-left: 2rem;
}

////////////////////////////////////
//SEARCH

.search {
  //have this take up 40% of parent, dont grow or shrink
  flex: 0 0 40%;

  //can have nested flex box, where a flex item is also a flex container
  display: flex;
  align-items: center;
  justify-content: center;

  &__input {
    //inputs dont naturally inherit font family or size
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    border-radius: 10rem;
    width: 90%;
    transition: all 0.2s;

    //set this so the button so the button sits on top of the input element and moves with it when input is in focus
    margin-right: -3.25rem;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }
  }

  &::-webkit-input-placeholder {
    color: var(--color-grey-light-4);
    font-weight: 100;
  }

  //using the adjacent selector to select the sibling of the input, the button
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);
    cursor: pointer;
    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  //formatting sg icon
  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }
}

////////////////////////////////////
//USER NAVIGATION
.user-nav {
  //since the user nav is in itself a flex item we can stretch it out to fill its parents entire height
  align-self: stretch;

  //default puts the children  items in a row
  display: flex;
  align-items: center;

  //selects only the direct children of the user nav, so the 2 icon boxes and 1 user container
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    //aligning the icons in the center vertically
    display: flex;
    align-items: center;
  }

  //stating on hover of each individual direct child element
  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  //position relative doesnt work on svg?
  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    //fills the color fof svg
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 100rem;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;

    //will align the text inside the notification, flexbox works with text
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user {
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }

  &__user-name {
  }
}

////////////////////////////////////////////
//SIDE NAVIGATION

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }
  }

  //for hover effect on side nav, for before to show up on screen we must define content
  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);

    //start the element hidden
    //where the transform starts from, default is center
    // transform-origin: center;
    transform: scaleY(0);

    //can include multiple properties in transform, the width with have a .4s delay and then take .2 seconds to complete
    //the background color will animate when active in .1 seconds
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s, background-color 0.1s;
  }

  //on hover scale up the before element
  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  //when active change the color of the before element slightly
  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;

    //for centering a tag and svg in the link
    display: flex;
    align-items: center;

    //to place ontop of the before, z index only works if we have a specified position

    position: relative;
    z-index: 10;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    //will set to the color of the current element, well supported, do more research, would work with over on link, just inherits the color of the element or parent element
    fill: currentColor;
  }
}

////////////////////////////////////////////
//SIDE NAVIGATION

.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

////////////////////////////////////////////
//GALLERY

.gallery {
  //here we put the figures side by side
  display: flex;

  &__item {
  }

  //take up 100% of the figure element
  //displaying image as a block or inline block will get rid of any small unwanted white space
  &__photo {
    width: 100%;
    display: block;
  }
}

////////////////////////////////////////////
//OVERVIEW

.overview {
  display: flex;
  border-bottom: 1px solid var(--color-grey-light-1);
  align-items: center;

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
    color: var(--color-grey-dark-3);
  }

  &__stars {
    //mr autp will have the same effect as setting flex to 1 visually but won stretch the element all the way out, which is bad practice, could also do margin 1eft auto on location
    //flex: 1;
    margin-right: auto;

    //gets rid of any whitespace around the svg and centers them exaclty
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }
  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;

    //making the rating stretch and take up all the height of the flex container
    align-self: stretch;

    /* formating the items in the item container */
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

////////////////////////////////////////////
//BTN

.btn-inline {
  border: none;
  color: var(--color-primary);

  //will inherit font from parent
  font-size: inherit;
  border-bottom: 1px solid currentcolor;

  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;

  cursor: pointer;
  transition: all 0.2s;

  & span{
    margin-left: 3px;
    transition: margin-left .2s;
  }



  //due to current color property on border, the border will change with the text color
  &:hover {
    color: var(--color-grey-dark-1);
    

    span{
      margin-left: 8px;
    }
  }



  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}

//pulsing animation
@keyframes pulsate {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.05);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

////////////////////////////////////////////
//PARAGRAPH

//last of type applies to only the same type of element
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

////////////////////////////////////////////
//LIST
.list {
  margin: 3rem 0;
  list-style: none;
  padding: 3rem;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  flex-wrap: wrap;

  //by making them 50% and using wrap it will create 2 columns , 33% 3, 25% 4 etc...
  &__item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem;

    //for aligning before element vertically
    display: flex;
    align-items: center;
  }

  //including the svg through css
  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    //adding svgs for older browsers
    // background-image: url(../img/chevron-thin-right.svg);
    // background-size: cover;

    //adding svgs for newer browsers using masks

    //the mask allows us to add a background color to the svg through css only insertion.
    //it pretty much puts the stencil of the svg over the background color so we can only see through to the background where the svg would be
    background-color: var(--color-primary);
    -webkit-mask-image: url(../img/chevron-thin-right.svg);
    -webkit-mask-size: cover;

    //for future when supported without prefix
    mask-image: url(../img/chevron-thin-right.svg);
    mask-size: cover;
  }
}

////////////////////////////////////////////
//RECOMMEND

.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);

  display: flex;
  align-items: center;

  &__count {
    //pushes the item to thr right all the way to the end of the box
    margin-right: auto;
  }

  &__friends {
  }

  &__photo {
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -1.5rem;
    }
  }
}

////////////////////////////////////////////
//REVIEWS

.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;

  //for before element
  position: relative;

  overflow: hidden;

  &-text {
    margin-bottom: 2rem;

    //ZINDEX ONLY ONLY WORKS IF YOU SET A POSITION, IN MOST CASES RELATIVE WILL BE FINE
    z-index: 10;
    position: relative;
  }

  &__user {
    display: flex;
    align-items: center;
  }

  &__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 10rem;
    margin-right: 1rem;
  }

  &__user-box {
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  //get the quotation mark from css tricks html entities
  &::before {
    content: "\201C";
    position: absolute;
    top: -2.5rem;
    left: -.8rem;


    line-height: 1;
    font-size: 20rem;
    color: var(--color-grey-light-2);

    //for positioning behind the text 
    z-index: 1;
  }
}
